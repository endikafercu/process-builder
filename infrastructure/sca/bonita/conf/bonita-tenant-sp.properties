# Authentication service to use. Some are natively provided:
# authenticationService
#   * bound to bonita authentication mode
#   * impl: org.bonitasoft.engine.authentication.impl.AuthenticationServiceImpl
# jaasAuthenticationService
#   * to use JAAS
#   * impl: com.bonitasoft.engine.authentication.impl.JAASGenericAuthenticationServiceImpl
#   * this is the one to configure SSO over CAS (CAS properties to be defined hereafter
# noAuthenticationService
#   * does no authentication on the engine side
#   * impl: com.bonitasoft.engine.authentication.impl.NoAuthenticationServiceImpl
# passphraseOrPasswordAuthenticationService
#   * Used by SAML2 and Kerberos implementations, login only if a passphrase is valid, or if a username/password is valid.
#   * impl: com.bonitasoft.engine.authentication.impl.PassphraseOrPasswordAuthenticationService
# you can provide your own implementation in bonita-tenant-sp-custom.xml and refer to the bean name of your choice
authentication.service.ref.name=passphraseOrPasswordAuthenticationService

# If authentication.service.ref.name equals "passphraseOrPasswordAuthenticationService",
# you need to configure the following passphrase 
authentication.service.ref.passphrase=Bonita

# Create users on the fly, when they are missing from bonita but authenticated by the SSO. The user will belong to the group and role specified below.
authentication.passphraseOrPasswordAuthenticationService.createMissingUser.enable=true
bonita.runtime.authentication.passphrase-or-password.create-missing-user.addDefaultMembership.enabled=false
#authentication.passphraseOrPasswordAuthenticationService.createMissingUser.defaultMembershipGroupPath=/acme/hr
#authentication.passphraseOrPasswordAuthenticationService.createMissingUser.defaultMembershipRoleName=member
bonita.runtime.authentication.passphrase-or-password.create-missing-user.createDefaultGroupAndRole.enabled=true
bonita.runtime.authentication.passphrase-or-password.create-missing-user.createUserGroupsAndRole.enabled=true
bonita.runtime.authentication.passphrase-or-password.create-missing-user.lowerGroupsAndRoleNamesCase.enabled=true

# CAS authentication delegate : enables the user, providing login/password,
# to be logged in automatically against CAS web application 
# To be used in conjunction with the generic authentication service configured with CAS (jaasAuthenticationService)
#authenticator.delegate=casAuthenticatorDelegate
#authentication.delegate.cas.server.url.prefix=http://ip_address:port
#authentication.delegate.cas.service.url=http://ip_address:port/bonita/loginservice

database.journal.datasource.name=${sysprop.bonita.database.journal.datasource.name:java:comp/env/bonitaDS}

# Connector executor
# time to wait (in seconds) before killing the thread executing a connector
bonita.tenant.connector.timeout=300

# Queriable logs
# All internal queriable logs are activated by default. You can disable individual logs by specifying
# bonita.tenant.queriable.log.<formatted_log_name>=false
# WARNING:
#       Bonita log names use the '<name>:INTERNAL' form (colon separator)
#       formatted_log_name must be in the '<name>.INTERNAL' form (dot separator)
# To get the list of Bonita log names, see https://customer.bonitasoft.com/knowledgebase/display/4880
#
# For example, to turn the 'ACTOR_CREATED:INTERNAL' log to false, uncomment the following:
#bonita.tenant.queriable.log.ACTOR_CREATED.INTERNAL=false

# Monitoring service
bonita.tenant.monitoring.allowMbeansRegistration=true

# Archive service
bonita.tenant.archive.SComment=true
bonita.tenant.archive.SDocumentMapping=true
bonita.tenant.archive.SProcessInstance=true
bonita.tenant.archive.SAutomaticTaskInstance=true
bonita.tenant.archive.SManualTaskInstance=true
bonita.tenant.archive.SUserTaskInstance=true
bonita.tenant.archive.SLoopActivityInstance=true
bonita.tenant.archive.SMultiInstanceActivityInstance=true
bonita.tenant.archive.SCallActivityInstance=true
bonita.tenant.archive.SGatewayInstance=true
bonita.tenant.archive.SSubProcessActivityInstance=true
bonita.tenant.archive.SConnectorInstance=true
bonita.tenant.archive.SSendTaskInstance=true
bonita.tenant.archive.SReceiveTaskInstance=true
bonita.tenant.archive.SDataInstance=true
bonita.tenant.archive.SRefBusinessDataInstance=true
bonita.tenant.archive.SContractData=true

# set this value to false to disable any dynamic permissions totally for this tenant
bonita.runtime.authorization.dynamic-check.enabled=true