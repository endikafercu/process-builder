@startuml
sprite $aggregation jar:archimate/aggregation
sprite $composition jar:archimate/composition

package com.bonitasoftprocessbuilder.model.audit {

    class AuditAction {
        +persistenceId : Long
        +processName : String
        +actionType : String
        +processVersion : String
        +objectType : String
        +inputContent : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
    }

}

package com.bonitasoftprocessbuilder.model.master {

    note top of MstActionAttribute : This object defines the metadata for an attribute used by a specific action type. Each record describes a unique field with its display name, data type, and a short description. These attributes are aggregated by the MstActionType object to define a complete action.
    class MstActionAttribute {
        +persistenceId : Long
        +fullName : String
        +displayName : String
        +label : String
        +shortDescription : String
        +dataType : String
        +auCreationDate : String
        +auCreationUser : String
        +auModificationDate : String
        +auModificationUser : String
    }

    note top of MstActionType : This master data object categorizes different types of actions available in the process builder. Each record defines an action type (e.g., 'Email Notification') and aggregates all the MstActionAttribute records that constitute its fields.
    class MstActionType {
        +persistenceId : Long
        +fullName : String
        +displayName : String
        +label : String
        +shortDescription : String
        +auCreationDate : String
        +auCreationUser : String
        +auModificationDate : String
        +auModificationUser : String
    }

    note top of MstEntityType : This master table defines and categorizes the different types of master entities stored within the MstGenericEntry table. Each record represents a distinct classification (e.g., 'Domain', 'Context', 'Status'), acting as a lookup for the refMstEntityTypeId in MstGenericEntry to identify the specific nature of a generic entry.
    class MstEntityType {
        +persistenceId : Long
        +fullName : String
        +displayName : String
        +shortDescription : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

    note top of MstGenericEntry : This master table serves as a centralized repository for various types of master data that share a common set of attributes. Each record represents an entry of a specific master entity type (e.g., a Status,...), allowing for standardized management and common auditing across different lookup lists.
    class MstGenericEntry {
        +persistenceId : Long
        +fullName : String
        +displayName : String
        +label : String
        +shortDescription : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
        == Custom queries ==
        +findByFullNameAndRefMstEntityTypeId(String fullName, Long refMstEntityTypeId) : MstGenericEntry
        +countForFindByFullNameAndRefMstEntityTypeId(String fullName, Long refMstEntityTypeId) : MstGenericEntry
    }

    note top of MstTypeFormField : he MstTypeField master table classifies and defines the available input control types for form fields. It provides a standardized and extensible list of field types (e.g., text input, number, date), ensuring consistent form configuration and data validation. Each entry represents a predefined field type that can be assigned to a FormField.
    class MstTypeFormField {
        +persistenceId : Long
        +fullName : String
        +shortDescription : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

}

package com.bonitasoftprocessbuilder.model.process {

    note top of FormField : The FormField object defines the properties and configuration of an individual input field within a FormSection. It specifies how the field behaves, what kind of data it collects, and how it's presented to the user. Each FormField is associated with a specific FormSection and is crucial for capturing user input.
    class FormField {
        +persistenceId : Long
        +identifier : String
        +label : String
        +displayOrder : Integer
        +placeholder : String
        +regularExpression : String
        +errorMessage : String
        +encrypted : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

    note top of FormSection : FormSection represents a logical division within a form, grouping related fields for improved organization, readability, and user experience. Each section has a title and description, acting as a structural component for complex forms and facilitating structured data collection.
    class FormSection {
        +persistenceId : Long
        +label : String
        +fullDescription : String
        +displayOrder : Integer
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

    class ProcessCase {
        +persistenceId : Long
    }

    note top of ProcessForm : The ProcessForm object defines the structure and content of a particular form used within a process.
    class ProcessForm {
        +persistenceId : Long
        +fullName : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

    note top of ProcessParameter : The ProcessParameter object represents an individual configuration parameter for a process. It is used to store specific configuration data. Each ProcessParameter is associated with a parent ProcessSpecification, allowing for flexible and extensible configuration for each process.
    class ProcessParameter {
        +persistenceId : Long
        +fullName : String
        +version : String
        +shortDescription : String
        +token : String
        +displayName : String
        +appName : String
        +autoCancellationDays : Integer
        +documentsFolderPath : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

    note top of ProcessSpecification : Object represents the main configuration and metadata for a complete business process. This object holds global properties of the process, and other essential configuration parameters that define the process's behavior.
    class ProcessSpecification {
        +persistenceId : Long
        +auCreationDate : String
        +auCreationUser : String
        +auModificationDate : String
        +auModificationUser : String
        +auActive : String
    }

    note top of ProcessStep : Represents a step or a stage within a business process. Each step can have associated actions, such as sending notifications, filling out forms, adding documents, or conditional redirects.
    class ProcessStep {
        +persistenceId : Long
        +title : String
        +technicalReference : String
        +longDescription : String
        +executionOrder : Integer
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
        +auActive : Boolean
    }

    note top of ProcessStepAction : Represents a single action to be executed within a process step. Each ProcessStep can have a list of these actions, executed in a defined order. This object is designed to hold core configuration fields and references to other objects that are common across multiple action types.
    class ProcessStepAction {
        +persistenceId : Long
        +executionOrder : Integer
        +auCreationDate : List<String>
        +auCreationUser : List<String>
        +auModificationDate : String
        +auModificationUser : String
        +auActive : Boolean
    }

}

MstActionType o-- "*" MstActionAttribute : refActionAttribute
MstGenericEntry o--  MstEntityType : refMstEntityType
FormField *--  MstTypeFormField : refTypeFormField
FormSection o-- "*" FormField : refField
ProcessCase o--  ProcessSpecification : processSpecification
ProcessForm *--  FormSection : refFormSection
ProcessSpecification *--  ProcessParameter : refProcessParameter
ProcessSpecification o--  MstGenericEntry : refStatus
ProcessSpecification *--  ProcessStep : refProcessStep
ProcessStep o-- "*" ProcessStepAction : actionsList
ProcessStepAction o--  MstActionType : refAction
ProcessStepAction *--  ProcessForm : refProcessForm

legend top left
<$composition> Composition relation  <$aggregation> Aggregation relation  &#42; Multiple relation
endlegend

@enduml
