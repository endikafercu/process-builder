@startuml
sprite $aggregation jar:archimate/aggregation
sprite $composition jar:archimate/composition

package com.bonitasoftprocessbuilder.model.master {

    note top of MstContext : Represents a specific operational environment or instance where a process is executed. This master table defines the available contexts, allowing processes to be categorized by their specific operational scope or related entity (e.g., a particular building, project, or operational unit)
    class MstContext {
        +persistenceId : Long
        +fullName : String
        +shortDescription : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

    note top of MstDomain : Defines the high-level business or functional area to which a process belongs. This master table provides a classification of processes into broader categories, facilitating organization, reporting, and access control based on the primary business function.
    class MstDomain {
        +persistenceId : Long
        +fullName : String
        +shortDescription : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

    note top of MstTypeFormField : he MstTypeField master table classifies and defines the available input control types for form fields. It provides a standardized and extensible list of field types (e.g., text input, number, date), ensuring consistent form configuration and data validation. Each entry represents a predefined field type that can be assigned to a FormField.
    class MstTypeFormField {
        +persistenceId : Long
        +fullName : String
        +shortDescription : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

}

package com.bonitasoftprocessbuilder.model.process {

    note top of FormField : The FormField object defines the properties and configuration of an individual input field within a FormSection. It specifies how the field behaves, what kind of data it collects, and how it's presented to the user. Each FormField is associated with a specific FormSection and is crucial for capturing user input.
    class FormField {
        +persistenceId : Long
        +identifier : String
        +label : String
        +placeholder : String
        +regularExpression : String
        +errorMessage : String
        +encrypted : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

    note top of FormSection : FormSection represents a logical division within a form, grouping related fields for improved organization, readability, and user experience. Each section has a title and description, acting as a structural component for complex forms and facilitating structured data collection.
    class FormSection {
        +persistenceId : Long
        +label : String
        +fullDescription : String
        +displayOrder : Integer
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

    note top of ProcessData : Represents the core data entity that encapsulates all the configured properties and dynamic runtime information for a specific process instance. It serves as the central container for process-related attributes, including its definition parameters, current state, and associated metadata.
    class ProcessData {
        +persistenceId : Long
        +fullName : String
        +appName : String
        +token : String
        +bpmProcessDefinitionId : Long
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
        +auActive : Boolean
    }

    note top of ProcessForm : \nThe ProcessForm object defines the structure and content of a particular form used within a process.
    class ProcessForm {
        +persistenceId : Long
        +fullName : String
        +auCreationDate : OffsetDateTime
        +auCreationUser : String
        +auModificationDate : OffsetDateTime
        +auModificationUser : String
    }

}

FormField *--  MstTypeFormField : typeFormField
ProcessData o--  MstContext : refContext
ProcessData o--  MstDomain : refDomain
ProcessData *-- "*" ProcessForm : refProcessForm
ProcessForm *--  FormSection : refFormSection

legend top left
<$composition> Composition relation  <$aggregation> Aggregation relation  &#42; Multiple relation
endlegend

@enduml
